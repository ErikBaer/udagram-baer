language: minimal

services: docker


before_install:
  - docker --version # print the version for logging
  - docker-compose --version # print the version for logging
  # Configure Dockerhub-credentials
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo 'dockerhub credentials configured'

  # Configure kubectl for udagram-custer
  - mkdir ${HOME}/.kube
  - cp udacity-c3-deployment/k8s/udagram-kubeconfig ${HOME}/.kube/config

  - kubectl config set clusters.k8s.local.certificate-authority-data "$KUBE_CLUSTER_CERTIFICATE"
  - kubectl config set users.k8s.local.client-certificate-data "$KUBE_CLIENT_CERTIFICATE"
  - kubectl config set users.k8s.local.client-key-data "$KUBE_CLIENT_KEY"



install:
  #Build Docker-Images and push them to Dockerhub
  - docker-compose -f udagram-deployment/docker/docker-compose-build.yaml build --parallel
  - docker-compose -f udagram-deployment/docker/docker-compose-build.yaml push 
  
  # cofigure kubernetes to pull the new images
  - kubectl apply -f udacity-c3-deployment/k8s/backend-feed-service.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/backend-user-service.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/frontend-service.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/reverseproxy-service.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/aws-secret.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/env-configmap.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/env-secret.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/backend-feed-deployment.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/backend-user-deployment.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/frontend-deployment.yaml
  - kubectl apply -f udacity-c3-deployment/k8s/reverseproxy-deployment.yaml